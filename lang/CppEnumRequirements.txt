Requirements
------------
Enumeration class attributes will be referred to as enumeration constants.

Pre-MetaClass Processing:
  R1) Enumeration class can only inherit from class object.
  R2) Enumeration constants must be valid Python identifiers.

  R3) Enumeration constants must be of type int or Ellipsis at the point of declaration.

Post-MetaClass Processing:
  Enumeration Constants
  ---------------------
  R4) Enumeration constants shall be instances of their enclosing class type.

  R5)
  --
  1.1) Enumeration constants shall have attribute Name which evaluates to the string representation of their lexical identifier prepended by the comboniation of their enclosing class name and ".".

  1.2) Enumeration constants shall implement the special method __str__. The returned string will have the same value as the instance attribute Name.

  2.1) Enumeration constants will have attribute Value which evaluates to:
    i) 0, if its instance was the first attribute declared in the enumeration class and is of type ellipsis, else
    ii) j.Value + 1, if its instance is of type ellipsis, where j is the previously declared enumeration constant, else
    iii) the integer value its instance was originally declared with.

  2.2) Enumeration constants shall implement the special method __int__. The returned integer will have the same value as the attribute Value.

  R6) Enumeration constants shall be hashed on their ValueS attribute.
  R7) Enumeration constants shall have a total order based on their ValueS attribute.

  R8) Enumeration constants shall be attribute immutable.

  R9) Enumeration constants shall be pickable.

  Enumeration Classes
  -------------------
  R10) Enumeration classes shall not be instantiable by clients.
  R11) Enumeration classes shall be attribute immutable.
  Enumeration classes shall be iterable over their enumeration constants. The order of iteration will reflect the order of enumeration constant declarations of each class.